(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     21906,        633]
NotebookOptionsPosition[     19879,        557]
NotebookOutlinePosition[     20255,        573]
CellTagsIndexPosition[     20212,        570]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["RSA Practice", "Title",
 CellChangeTimes->{{3.674428358531692*^9, 3.674428363389655*^9}}],

Cell[CellGroupData[{

Cell["Encrypting integer key", "Section",
 CellChangeTimes->{{3.6744216864249973`*^9, 3.674421708766659*^9}}],

Cell["I am going to encrypt the number 42", "Text",
 CellChangeTimes->{{3.6744216998930764`*^9, 3.674421738876264*^9}}],

Cell[CellGroupData[{

Cell["Manual Approach", "Subsection",
 CellChangeTimes->{{3.6744217622940316`*^9, 3.6744217659820423`*^9}}],

Cell["\<\
Pick 2 prime numbers r and s where r+s+ 1is prime
Raise the message to the r+1 power modulo N
where n = r+s+1
The message is now encrypted
raise the message to the s power to decrypt it
\
\>", "Text",
 CellChangeTimes->{{3.674421772421621*^9, 3.674421806350783*^9}, {
  3.6744218365966654`*^9, 3.674421862866274*^9}, {3.6744219339990416`*^9, 
  3.6744220157554107`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cpr", "[", 
    RowBox[{"x_Integer", ",", "k_Integer", ",", "m_Integer"}], "]"}], "/;", 
   RowBox[{"x", ">", "m", ">", "k", ">", "1"}]}], ":=", 
  RowBox[{"RandomChoice", "@", 
   RowBox[{"Pick", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"k", ",", "m"}], "]"}], ",", 
     RowBox[{"CoprimeQ", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"k", ",", "m"}], "]"}]}], "]"}]}], "]"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"key", "=", 
   RowBox[{"fastPad", "@", "\"\<Hi\>\""}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"Prime", "[", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"350", ",", "5000"}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Prime", "[", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"350", ",", "5000"}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"r", "*", "s"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"e", "=", 
  RowBox[{"cpr", "[", 
   RowBox[{
    RowBox[{"EulerPhi", "@", "n"}], ",", "2", ",", 
    RowBox[{
     RowBox[{"EulerPhi", "@", "n"}], "-", "1"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"d", "=", 
  RowBox[{"PowerMod", "[", 
   RowBox[{"e", ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"EulerPhi", "@", "n"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "~", "GCD", "~", 
   RowBox[{"EulerPhi", "[", "n", "]"}]}], "\[Equal]", "1"}]}], "Input",
 CellChangeTimes->{{3.6744220721732483`*^9, 3.6744221528274546`*^9}, {
   3.6744223514546185`*^9, 3.674422361866529*^9}, {3.6744224031816025`*^9, 
   3.6744224070138063`*^9}, {3.6744224531660604`*^9, 3.674422475574506*^9}, {
   3.6744226765815725`*^9, 3.674422827586731*^9}, {3.674423234384506*^9, 
   3.674423262710782*^9}, {3.674430511384028*^9, 3.674430559603133*^9}, {
   3.674430597311184*^9, 3.674430672422643*^9}, {3.674432904375486*^9, 
   3.674432983792467*^9}, 3.674433020002825*^9, {3.6744330954297533`*^9, 
   3.67443310429784*^9}, {3.674433203151147*^9, 3.674433205085719*^9}, {
   3.67443340566025*^9, 3.674433462912826*^9}, {3.674433545957614*^9, 
   3.6744335477748246`*^9}, {3.6744340381510878`*^9, 
   3.6744340495823426`*^9}, {3.674434156147131*^9, 3.674434201512231*^9}, {
   3.674434239942481*^9, 3.674434240189984*^9}, {3.6744346016441746`*^9, 
   3.6744346032445602`*^9}, 3.674434727632518*^9}],

Cell[BoxData["13455703"], "Output",
 CellChangeTimes->{
  3.6744223731577997`*^9, {3.6744224100341005`*^9, 3.674422454067661*^9}, 
   3.674422492342514*^9, {3.674422721828433*^9, 3.6744228032217503`*^9}, 
   3.674422836355339*^9, 3.6744232633115396`*^9, {3.6744305221084585`*^9, 
   3.674430571047827*^9}, 3.674430604768012*^9, {3.674430643047123*^9, 
   3.674430707094387*^9}, {3.674432976585308*^9, 3.6744330297943125`*^9}, {
   3.674433111038018*^9, 3.674433124407504*^9}, 3.6744332111813526`*^9, 
   3.674434221593007*^9, 3.6744343405710077`*^9}],

Cell[BoxData["8456707"], "Output",
 CellChangeTimes->{
  3.6744223731577997`*^9, {3.6744224100341005`*^9, 3.674422454067661*^9}, 
   3.674422492342514*^9, {3.674422721828433*^9, 3.6744228032217503`*^9}, 
   3.674422836355339*^9, 3.6744232633115396`*^9, {3.6744305221084585`*^9, 
   3.674430571047827*^9}, 3.674430604768012*^9, {3.674430643047123*^9, 
   3.674430707094387*^9}, {3.674432976585308*^9, 3.6744330297943125`*^9}, {
   3.674433111038018*^9, 3.674433124407504*^9}, 3.6744332111813526`*^9, 
   3.674434221593007*^9, 3.6744343405710077`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.6744223731577997`*^9, {3.6744224100341005`*^9, 3.674422454067661*^9}, 
   3.674422492342514*^9, {3.674422721828433*^9, 3.6744228032217503`*^9}, 
   3.674422836355339*^9, 3.6744232633115396`*^9, {3.6744305221084585`*^9, 
   3.674430571047827*^9}, 3.674430604768012*^9, {3.674430643047123*^9, 
   3.674430707094387*^9}, {3.674432976585308*^9, 3.6744330297943125`*^9}, {
   3.674433111038018*^9, 3.674433124407504*^9}, 3.6744332111813526`*^9, 
   3.674434221593007*^9, 3.6744343405710077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"encryptedMessage", "=", 
  RowBox[{"Mod", "[", 
   RowBox[{
    SuperscriptBox["key", "e"], ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6744228601118827`*^9, 3.6744228947307887`*^9}, 
   3.6744330392570314`*^9, {3.6744332199358597`*^9, 3.6744332248753414`*^9}, {
   3.6744344150567837`*^9, 3.674434459327878*^9}}],

Cell[BoxData["13608938"], "Output",
 CellChangeTimes->{3.674422896312614*^9, 3.674423338303139*^9, 
  3.6744332645733075`*^9, 3.674434465418061*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decryptedMessage", "=", 
  RowBox[{
   SuperscriptBox["encryptedMessage", "d"], "~", "Mod", "~", "n"}]}]], "Input",
 CellChangeTimes->{{3.6744229540968113`*^9, 3.6744230080016823`*^9}, 
   3.6744230420956182`*^9, 3.6744332776747723`*^9, {3.6744344790330973`*^9, 
   3.674434483620613*^9}}],

Cell[BoxData["109"], "Output",
 CellChangeTimes->{{3.6744230176635857`*^9, 3.674423043118171*^9}, 
   3.674423340788847*^9, 3.6744333211884327`*^9, 3.6744344890834613`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fastDePad", "@", "decryptedMessage"}]], "Input",
 CellChangeTimes->{{3.6744344994937525`*^9, 3.6744345533227644`*^9}, {
  3.674434584540269*^9, 3.6744345952528505`*^9}}],

Cell[BoxData["\<\"m\"\>"], "Output",
 CellChangeTimes->{{3.674434506518088*^9, 3.674434553876687*^9}, 
   3.674434596738843*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["key", 
  RowBox[{"r", "*", "s"}]]], "Input",
 CellChangeTimes->{{3.6744230607193255`*^9, 3.674423065177224*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{
         "16451492639826460209480864493676436397031338046734911939976866020967\
733612877366560671730198760243916376823942232288055265572120593463977", 
          TemplateBox[{"18210246"},
           "OutputSizeLimit`Skeleton",
           DisplayFunction->(FrameBox[
             RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
             Background -> GrayLevel[0.75], 
             BaseStyle -> {
              "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
               ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
             ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
             GrayLevel[0.75], RoundingRadius -> 7]& )], 
          "9398151676157381437316297198392394571090461888450672153938742884371\
4347220386980407097427783773844464153105783390714462825369420999773511"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{72., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{59., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{59., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 98, 28216724054354686422, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 98, 28216724054354686422, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 98, 28216724054354686422, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{90., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{90., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[98]]], "Output",
 CellChangeTimes->{3.67442335557839*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"key", "~", "GCD", "~", "n"}], "\[Equal]", "1"}]], "Input",
 CellChangeTimes->{{3.6744224158030753`*^9, 3.674422430041931*^9}, {
  3.6744231830513535`*^9, 3.67442318499153*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.674422431306142*^9, 3.67442245930581*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Padding", "Section",
 CellChangeTimes->{{3.67442755513579*^9, 3.6744275640882664`*^9}}],

Cell["\<\
This section is about padding a message to preserve its semantic correctnes \
when read as a number\
\>", "Text",
 CellChangeTimes->{{3.674427569945848*^9, 3.6744276444429913`*^9}, {
  3.674428544523536*^9, 3.6744285447081947`*^9}}],

Cell[CellGroupData[{

Cell["Core", "Subsection",
 CellChangeTimes->{{3.6744286341085825`*^9, 3.6744286457988195`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"toNumber", "[", 
   RowBox[{"message_", ",", "padSize_"}], "]"}], ":=", 
  RowBox[{"ToExpression", "@", 
   RowBox[{"StringJoin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringPadLeft", "[", 
       RowBox[{
        RowBox[{"ToString", "@", "#"}], ",", "padSize", ",", "\"\<0\>\""}], 
       "]"}], "&"}], "/@", 
     RowBox[{"ToCharacterCode", "@", "message"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"dePad", "[", 
   RowBox[{"message_", ",", "padSize_"}], "]"}], ":=", 
  RowBox[{"StringJoin", "[", 
   RowBox[{
    RowBox[{"Composition", "[", 
     RowBox[{"FromCharacterCode", ",", "ToExpression"}], "]"}], "/@", 
    RowBox[{"returnChar", "[", 
     RowBox[{"message", ",", "padSize"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"returnChar", "[", 
   RowBox[{"message_", ",", "padSize_"}], "]"}], ":=", 
  RowBox[{"StringPartition", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"fixPad", "[", "padSize", "]"}], "[", 
     RowBox[{"ToString", "@", "message"}], "]"}], ",", "padSize"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"fixPad", "[", "padSize_", "]"}], ":=", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"StringLength", "@", "#"}], "~", "Mod", "~", "padSize"}], 
      "\[Equal]", "0"}], ",", "#", ",", 
     RowBox[{"StringPadLeft", "[", 
      RowBox[{"#", ",", 
       RowBox[{"padSize", "*", 
        RowBox[{"Ceiling", "[", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"StringLength", "@", "#"}], ")"}], "padSize"], "]"}]}], 
       ",", "\"\<0\>\""}], "]"}]}], "]"}], "&"}]}]}], "Code",
 CellChangeTimes->{3.674428427867347*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Cases", "Subsection",
 CellChangeTimes->{{3.6744287528494062`*^9, 3.6744287583210077`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dePad", "[", 
   RowBox[{
    RowBox[{"toNumber", "[", 
     RowBox[{"\"\<Hello World\>\"", ",", "3"}], "]"}], " ", ",", "3"}], "]"}],
   "\[Equal]", "\"\<Hello World\>\""}]], "Input",
 CellChangeTimes->{{3.6744288180514736`*^9, 3.6744288782108655`*^9}, {
  3.674428998217308*^9, 3.674428998433027*^9}, {3.674429073032052*^9, 
  3.674429107508674*^9}, {3.674429189237795*^9, 3.674429192987466*^9}, {
  3.674429237928314*^9, 3.674429308755111*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6744292687248497`*^9, 3.6744293103872786`*^9, 
  3.674433889321219*^9, 3.6744344236340947`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Less Verbose", "Subsection",
 CellChangeTimes->{{3.674428771333561*^9, 3.674428807458785*^9}, {
  3.674429082002179*^9, 3.6744290838043766`*^9}}],

Cell["\<\
These default to 3 digits per character in the message, appropriate for ASCII\
\>", "Text",
 CellChangeTimes->{{3.6744277579793415`*^9, 3.674427951433198*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fastPad", "=", 
   RowBox[{
    RowBox[{"toNumber", "[", 
     RowBox[{"#", ",", "3"}], "]"}], "&"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fastDePad", "=", 
   RowBox[{
    RowBox[{"dePad", "[", 
     RowBox[{"#", ",", "3"}], "]"}], "&"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6744249938478055`*^9, 3.6744250174236717`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fastDePad", "@", 
  RowBox[{"fastPad", "@", "\"\<Hi David\>\""}]}]], "Input",
 CellChangeTimes->{{3.6744250258944693`*^9, 3.6744250447739153`*^9}}],

Cell[BoxData["\<\"Hi David\"\>"], "Output",
 CellChangeTimes->{3.674428018042863*^9, 3.6744338893746076`*^9, 
  3.6744344236653438`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{958, 1028},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 95, 1, 99, "Title"],
Cell[CellGroupData[{
Cell[700, 27, 109, 1, 69, "Section"],
Cell[812, 30, 119, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[956, 35, 107, 1, 47, "Subsection"],
Cell[1066, 38, 380, 10, 134, "Text"],
Cell[1449, 50, 492, 14, 53, "Input"],
Cell[CellGroupData[{
Cell[1966, 68, 2035, 48, 153, "Input"],
Cell[4004, 118, 550, 8, 33, "Output"],
Cell[4557, 128, 549, 8, 33, "Output"],
Cell[5109, 138, 546, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5692, 151, 346, 7, 32, "Input"],
Cell[6041, 160, 148, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6226, 167, 313, 6, 32, "Input"],
Cell[6542, 175, 172, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6751, 182, 193, 3, 32, "Input"],
Cell[6947, 187, 128, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7112, 194, 143, 3, 32, "Input"],
Cell[7258, 199, 8147, 207, 199, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15442, 411, 211, 4, 32, "Input"],
Cell[15656, 417, 97, 1, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15814, 425, 93, 1, 69, "Section"],
Cell[15910, 428, 242, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[16177, 437, 96, 1, 47, "Subsection"],
Cell[16276, 440, 1662, 48, 133, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17975, 493, 102, 1, 47, "Subsection"],
Cell[CellGroupData[{
Cell[18102, 498, 482, 10, 32, "Input"],
Cell[18587, 510, 148, 2, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18784, 518, 151, 2, 47, "Subsection"],
Cell[18938, 522, 169, 3, 32, "Text"],
Cell[19110, 527, 155, 5, 32, "Input"],
Cell[19268, 534, 224, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[19517, 544, 171, 3, 32, "Input"],
Cell[19691, 549, 136, 2, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

